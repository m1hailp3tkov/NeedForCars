<nav aria-label="someLabel">
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            var routeData = this.Context.Request.Query
                .ToDictionary(x => x.Key, x => (int.Parse(x.Value) - 1).ToString());

            <li class="page-item">
                <a class="page-link" asp-all-route-data="routeData">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            var routeData = this.Context.Request.Query
            .ToDictionary(x => x.Key, x => x.Value.ToString());

            if (!routeData.TryAdd("page", i.ToString()))
            {
                routeData["page"] = i.ToString();
            }

            if (i == Model.PageNumber)
            {
                <li class="page-item active">
                    <a class="page-link" asp-all-route-data="routeData">@i</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-all-route-data="routeData">@i</a>
                </li>
            }
        }


        @if (Model.HasNextPage)
        {
            var routeData = this.Context.Request.Query
                .ToDictionary(x => x.Key, x => (int.Parse(x.Value) + 1).ToString());

            <li class="page-item">
                <a class="page-link" asp-all-route-data="routeData">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">Next</a>
            </li>
        }
    </ul>
</nav>